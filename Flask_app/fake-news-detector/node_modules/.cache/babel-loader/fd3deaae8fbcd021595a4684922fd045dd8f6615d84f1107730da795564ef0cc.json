{"ast":null,"code":"var _jsxFileName = \"C:\\\\Pulkit\\\\Padhaii\\\\Programming\\\\Python\\\\Hackathon BHU\\\\Flask_app\\\\fake-news-detector\\\\src\\\\components\\\\FakeNewsAnalyzer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport './FakeNewsAnalyzer.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FakeNewsAnalyzer = () => {\n  _s();\n  const [inputText, setInputText] = useState(\"\");\n  const [prediction, setPrediction] = useState(null);\n  const [explanation, setExplanation] = useState(\"\");\n  const [shapPlot, setShapPlot] = useState(\"\");\n  const handleInputChange = event => {\n    setInputText(event.target.value);\n  };\n  const handleSubmit = async () => {\n    // Send a request to the backend for prediction and explanation\n    const response = await fetch(\"http://localhost:5000/explain\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        text: inputText\n      })\n    });\n    const data = await response.json();\n    setPrediction(data.label);\n    setExplanation(data.explanation_text);\n    setShapPlot(data.shap_plot); // Set the base64 SHAP plot\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"analyzer-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"Fake News Detector\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: inputText,\n      onChange: handleInputChange,\n      placeholder: \"Enter news title or text here\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"Analyze\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), prediction && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"result\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Prediction: \", prediction]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Explanation: \", explanation]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"SHAP Explanation Plot:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `data:image/png;base64,${shapPlot}`,\n        alt: \"SHAP Explanation\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(FakeNewsAnalyzer, \"5WS57hF2KkS5JU4+6S7MEjFJ1g0=\");\n_c = FakeNewsAnalyzer;\nexport default FakeNewsAnalyzer;\nvar _c;\n$RefreshReg$(_c, \"FakeNewsAnalyzer\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","FakeNewsAnalyzer","_s","inputText","setInputText","prediction","setPrediction","explanation","setExplanation","shapPlot","setShapPlot","handleInputChange","event","target","value","handleSubmit","response","fetch","method","headers","body","JSON","stringify","text","data","json","label","explanation_text","shap_plot","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","placeholder","onClick","src","alt","_c","$RefreshReg$"],"sources":["C:/Pulkit/Padhaii/Programming/Python/Hackathon BHU/Flask_app/fake-news-detector/src/components/FakeNewsAnalyzer.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport './FakeNewsAnalyzer.css';\r\n\r\nconst FakeNewsAnalyzer = () => {\r\n  const [inputText, setInputText] = useState(\"\");\r\n  const [prediction, setPrediction] = useState(null);\r\n  const [explanation, setExplanation] = useState(\"\");\r\n  const [shapPlot, setShapPlot] = useState(\"\");\r\n\r\n  const handleInputChange = (event) => {\r\n    setInputText(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    // Send a request to the backend for prediction and explanation\r\n    const response = await fetch(\"http://localhost:5000/explain\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({ text: inputText }),\r\n    });\r\n    const data = await response.json();\r\n    \r\n    setPrediction(data.label);\r\n    setExplanation(data.explanation_text);\r\n    setShapPlot(data.shap_plot);  // Set the base64 SHAP plot\r\n  };\r\n\r\n  return (\r\n    <div className=\"analyzer-container\">\r\n      <h1 className=\"title\">Fake News Detector</h1>\r\n      <textarea\r\n        value={inputText}\r\n        onChange={handleInputChange}\r\n        placeholder=\"Enter news title or text here\"\r\n      />\r\n      <button onClick={handleSubmit}>Analyze</button>\r\n\r\n      {prediction && (\r\n        <div className=\"result\">\r\n          <h2>Prediction: {prediction}</h2>\r\n          <p>Explanation: {explanation}</p>\r\n          <h3>SHAP Explanation Plot:</h3>\r\n          <img src={`data:image/png;base64,${shapPlot}`} alt=\"SHAP Explanation\" />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FakeNewsAnalyzer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}