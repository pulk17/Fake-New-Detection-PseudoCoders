{"ast":null,"code":"var _jsxFileName = \"C:\\\\Pulkit\\\\Padhaii\\\\Programming\\\\Python\\\\Hackathon BHU\\\\Flask_app\\\\fake-news-detector\\\\src\\\\components\\\\FakeNewsAnalyzer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport './FakeNewsAnalyzer.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FakeNewsAnalyzer = () => {\n  _s();\n  const [inputText, setInputText] = useState(\"\");\n  const [prediction, setPrediction] = useState(\"\");\n  const [confidence, setConfidence] = useState(\"\");\n  const [explanation, setExplanation] = useState(\"\");\n  const [shapPlotPath, setShapPlotPath] = useState(\"\");\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const handleInputChange = event => {\n    setInputText(event.target.value);\n  };\n  const handleSubmit = async () => {\n    setLoading(true);\n    setError(\"\");\n    setPrediction(\"\");\n    setConfidence(\"\");\n    setExplanation(\"\");\n    setShapPlotPath(\"\");\n    try {\n      const response = await fetch(\"http://localhost:5000/explain\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          text: inputText\n        })\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to fetch explanation from the server.\");\n      }\n      const data = await response.json();\n      if (data.error) {\n        throw new Error(data.error);\n      }\n\n      // Set all the values returned by the backend\n      const {\n        explanation_values,\n        plot_path,\n        textual_explanation,\n        tokens\n      } = data;\n      setPrediction(data.label);\n      setConfidence((data.confidence * 100).toFixed(2)); // Confidence percentage\n      setExplanation(textual_explanation);\n      setShapPlotPath(plot_path); // Path to the SHAP plot\n    } catch (err) {\n      setError(err.message);\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"analyzer-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"Fake News Detector\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: inputText,\n      onChange: handleInputChange,\n      placeholder: \"Enter news headline or content here\",\n      className: \"input-textarea\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      disabled: loading,\n      className: \"submit-button\",\n      children: loading ? \"Analyzing...\" : \"Analyze\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }, this), prediction && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"prediction-result\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [\"Prediction: \", prediction]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Confidence: \", confidence, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"explanation\",\n        children: explanation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), shapPlotPath && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          children: \"SHAP Explanation Plot:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: `http://localhost:5000${shapPlotPath}`,\n          alt: \"SHAP Explanation\",\n          className: \"shap-plot\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n};\n_s(FakeNewsAnalyzer, \"NkZFHL7Ve7GdMS51th+ZEU5RNAQ=\");\n_c = FakeNewsAnalyzer;\nexport default FakeNewsAnalyzer;\nvar _c;\n$RefreshReg$(_c, \"FakeNewsAnalyzer\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","FakeNewsAnalyzer","_s","inputText","setInputText","prediction","setPrediction","confidence","setConfidence","explanation","setExplanation","shapPlotPath","setShapPlotPath","loading","setLoading","error","setError","handleInputChange","event","target","value","handleSubmit","response","fetch","method","headers","body","JSON","stringify","text","ok","Error","data","json","explanation_values","plot_path","textual_explanation","tokens","label","toFixed","err","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","placeholder","onClick","disabled","src","alt","_c","$RefreshReg$"],"sources":["C:/Pulkit/Padhaii/Programming/Python/Hackathon BHU/Flask_app/fake-news-detector/src/components/FakeNewsAnalyzer.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport './FakeNewsAnalyzer.css';\r\n\r\nconst FakeNewsAnalyzer = () => {\r\n  const [inputText, setInputText] = useState(\"\");\r\n  const [prediction, setPrediction] = useState(\"\");\r\n  const [confidence, setConfidence] = useState(\"\");\r\n  const [explanation, setExplanation] = useState(\"\");\r\n  const [shapPlotPath, setShapPlotPath] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState(\"\");\r\n\r\n  const handleInputChange = (event) => {\r\n    setInputText(event.target.value);\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    setLoading(true);\r\n    setError(\"\");\r\n    setPrediction(\"\");\r\n    setConfidence(\"\");\r\n    setExplanation(\"\");\r\n    setShapPlotPath(\"\");\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/explain\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({ text: inputText }),\r\n      });\r\n\r\n      if (!response.ok) {\r\n        throw new Error(\"Failed to fetch explanation from the server.\");\r\n      }\r\n\r\n      const data = await response.json();\r\n\r\n      if (data.error) {\r\n        throw new Error(data.error);\r\n      }\r\n\r\n      // Set all the values returned by the backend\r\n      const { explanation_values, plot_path, textual_explanation, tokens } = data;\r\n      setPrediction(data.label);\r\n      setConfidence((data.confidence * 100).toFixed(2)); // Confidence percentage\r\n      setExplanation(textual_explanation);\r\n      setShapPlotPath(plot_path); // Path to the SHAP plot\r\n    } catch (err) {\r\n      setError(err.message);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"analyzer-container\">\r\n      <h1 className=\"title\">Fake News Detector</h1>\r\n      <textarea\r\n        value={inputText}\r\n        onChange={handleInputChange}\r\n        placeholder=\"Enter news headline or content here\"\r\n        className=\"input-textarea\"\r\n      />\r\n      <button onClick={handleSubmit} disabled={loading} className=\"submit-button\">\r\n        {loading ? \"Analyzing...\" : \"Analyze\"}\r\n      </button>\r\n\r\n      {error && <p className=\"error\">Error: {error}</p>}\r\n\r\n      {prediction && (\r\n        <div className=\"prediction-result\">\r\n          <h2>Prediction: {prediction}</h2>\r\n          <p>Confidence: {confidence}%</p>\r\n          <p className=\"explanation\">{explanation}</p>\r\n          {shapPlotPath && (\r\n            <div>\r\n              <h3>SHAP Explanation Plot:</h3>\r\n              <img\r\n                src={`http://localhost:5000${shapPlotPath}`}\r\n                alt=\"SHAP Explanation\"\r\n                className=\"shap-plot\"\r\n              />\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FakeNewsAnalyzer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}