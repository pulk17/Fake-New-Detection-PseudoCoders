{"ast":null,"code":"var _jsxFileName = \"C:\\\\Pulkit\\\\Padhaii\\\\Programming\\\\Python\\\\Hackathon BHU\\\\Flask_app\\\\fake-news-detector\\\\src\\\\components\\\\GamePage.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\"; // For navigation\nimport axios from \"axios\";\nimport \"./GamePage.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst GamePage = () => {\n  _s();\n  const [newsItem, setNewsItem] = useState(\"\");\n  const [userAnswer, setUserAnswer] = useState(null);\n  const [score, setScore] = useState(0);\n  const [loading, setLoading] = useState(false);\n  const [gameOver, setGameOver] = useState(false);\n  const [error, setError] = useState(null);\n  const navigate = useNavigate();\n\n  // Function to fetch random news from your backend or use a static list\n  const fetchNewsItem = async () => {\n    setLoading(true);\n    try {\n      const response = await axios.get(\"http://localhost:5000/random-news\"); // Replace with your endpoint\n      setNewsItem(response.data.text); // Assuming the response contains the 'text' of the news item\n      setUserAnswer(null);\n      setError(null);\n    } catch (err) {\n      setError(\"Error fetching news item.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Function to handle user's answer and check if it's correct\n  const handleAnswer = async answer => {\n    if (!userAnswer) {\n      setUserAnswer(answer);\n      try {\n        const response = await axios.post(\"http://localhost:5000/analyze\", {\n          text: newsItem\n        });\n        const data = response.data;\n        if (data.label.toLowerCase() === answer.toLowerCase()) {\n          setScore(score + 1);\n        }\n\n        // Fetch next news item\n        setTimeout(() => {\n          fetchNewsItem();\n        }, 1000);\n      } catch (err) {\n        setError(\"Error analyzing news.\");\n      }\n    }\n  };\n\n  // Start the game when the component mounts\n  useEffect(() => {\n    fetchNewsItem();\n  }, []);\n\n  // Handle game over\n  const handleGameOver = () => {\n    setGameOver(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-page\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"game-title\",\n      children: \"Fake News Detector Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading news...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: !gameOver ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"news-item\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: newsItem\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"options\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleAnswer(\"True\"),\n            disabled: userAnswer !== null,\n            className: \"answer-button\",\n            children: \"True\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleAnswer(\"False\"),\n            disabled: userAnswer !== null,\n            className: \"answer-button\",\n            children: \"False\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"game-over\",\n        children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"Game Over!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Your score: \", score]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => navigate(\"/\"),\n          className: \"restart-button\",\n          children: \"Restart Game\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 13\n      }, this)\n    }, void 0, false), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n      className: \"footer\",\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\xA9 2025 \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"trademark\",\n          children: \"PseudoCoders\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 24\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(GamePage, \"35nhNa0+GISZE1QsWWwkbNGB8YQ=\", false, function () {\n  return [useNavigate];\n});\n_c = GamePage;\nexport default GamePage;\nvar _c;\n$RefreshReg$(_c, \"GamePage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","GamePage","_s","newsItem","setNewsItem","userAnswer","setUserAnswer","score","setScore","loading","setLoading","gameOver","setGameOver","error","setError","navigate","fetchNewsItem","response","get","data","text","err","handleAnswer","answer","post","label","toLowerCase","setTimeout","handleGameOver","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","_c","$RefreshReg$"],"sources":["C:/Pulkit/Padhaii/Programming/Python/Hackathon BHU/Flask_app/fake-news-detector/src/components/GamePage.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\"; // For navigation\r\nimport axios from \"axios\";\r\nimport \"./GamePage.css\";\r\n\r\nconst GamePage = () => {\r\n  const [newsItem, setNewsItem] = useState(\"\");\r\n  const [userAnswer, setUserAnswer] = useState(null);\r\n  const [score, setScore] = useState(0);\r\n  const [loading, setLoading] = useState(false);\r\n  const [gameOver, setGameOver] = useState(false);\r\n  const [error, setError] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  // Function to fetch random news from your backend or use a static list\r\n  const fetchNewsItem = async () => {\r\n    setLoading(true);\r\n    try {\r\n      const response = await axios.get(\"http://localhost:5000/random-news\"); // Replace with your endpoint\r\n      setNewsItem(response.data.text); // Assuming the response contains the 'text' of the news item\r\n      setUserAnswer(null);\r\n      setError(null);\r\n    } catch (err) {\r\n      setError(\"Error fetching news item.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  // Function to handle user's answer and check if it's correct\r\n  const handleAnswer = async (answer) => {\r\n    if (!userAnswer) {\r\n      setUserAnswer(answer);\r\n      try {\r\n        const response = await axios.post(\"http://localhost:5000/analyze\", {\r\n          text: newsItem,\r\n        });\r\n\r\n        const data = response.data;\r\n        if (data.label.toLowerCase() === answer.toLowerCase()) {\r\n          setScore(score + 1);\r\n        }\r\n\r\n        // Fetch next news item\r\n        setTimeout(() => {\r\n          fetchNewsItem();\r\n        }, 1000);\r\n      } catch (err) {\r\n        setError(\"Error analyzing news.\");\r\n      }\r\n    }\r\n  };\r\n\r\n  // Start the game when the component mounts\r\n  useEffect(() => {\r\n    fetchNewsItem();\r\n  }, []);\r\n\r\n  // Handle game over\r\n  const handleGameOver = () => {\r\n    setGameOver(true);\r\n  };\r\n\r\n  return (\r\n    <div className=\"game-page\">\r\n      <h1 className=\"game-title\">Fake News Detector Game</h1>\r\n      {loading ? (\r\n        <p>Loading news...</p>\r\n      ) : (\r\n        <>\r\n          {!gameOver ? (\r\n            <div className=\"news-item\">\r\n              <h2>{newsItem}</h2>\r\n              <div className=\"options\">\r\n                <button\r\n                  onClick={() => handleAnswer(\"True\")}\r\n                  disabled={userAnswer !== null}\r\n                  className=\"answer-button\"\r\n                >\r\n                  True\r\n                </button>\r\n                <button\r\n                  onClick={() => handleAnswer(\"False\")}\r\n                  disabled={userAnswer !== null}\r\n                  className=\"answer-button\"\r\n                >\r\n                  False\r\n                </button>\r\n              </div>\r\n            </div>\r\n          ) : (\r\n            <div className=\"game-over\">\r\n              <h2>Game Over!</h2>\r\n              <p>Your score: {score}</p>\r\n              <button onClick={() => navigate(\"/\")} className=\"restart-button\">\r\n                Restart Game\r\n              </button>\r\n            </div>\r\n          )}\r\n        </>\r\n      )}\r\n\r\n      {error && <p className=\"error\">{error}</p>}\r\n\r\n      <footer className=\"footer\">\r\n        <p>&#169; 2025 <span className=\"trademark\">PseudoCoders</span></p>\r\n      </footer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GamePage;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB,CAAC,CAAC;AAChD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAExB,MAAMC,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACY,UAAU,EAAEC,aAAa,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAClD,MAAM,CAACc,KAAK,EAAEC,QAAQ,CAAC,GAAGf,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAACkB,QAAQ,EAAEC,WAAW,CAAC,GAAGnB,QAAQ,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACoB,KAAK,EAAEC,QAAQ,CAAC,GAAGrB,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAMsB,QAAQ,GAAGpB,WAAW,CAAC,CAAC;;EAE9B;EACA,MAAMqB,aAAa,GAAG,MAAAA,CAAA,KAAY;IAChCN,UAAU,CAAC,IAAI,CAAC;IAChB,IAAI;MACF,MAAMO,QAAQ,GAAG,MAAMrB,KAAK,CAACsB,GAAG,CAAC,mCAAmC,CAAC,CAAC,CAAC;MACvEd,WAAW,CAACa,QAAQ,CAACE,IAAI,CAACC,IAAI,CAAC,CAAC,CAAC;MACjCd,aAAa,CAAC,IAAI,CAAC;MACnBQ,QAAQ,CAAC,IAAI,CAAC;IAChB,CAAC,CAAC,OAAOO,GAAG,EAAE;MACZP,QAAQ,CAAC,2BAA2B,CAAC;IACvC,CAAC,SAAS;MACRJ,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;;EAED;EACA,MAAMY,YAAY,GAAG,MAAOC,MAAM,IAAK;IACrC,IAAI,CAAClB,UAAU,EAAE;MACfC,aAAa,CAACiB,MAAM,CAAC;MACrB,IAAI;QACF,MAAMN,QAAQ,GAAG,MAAMrB,KAAK,CAAC4B,IAAI,CAAC,+BAA+B,EAAE;UACjEJ,IAAI,EAAEjB;QACR,CAAC,CAAC;QAEF,MAAMgB,IAAI,GAAGF,QAAQ,CAACE,IAAI;QAC1B,IAAIA,IAAI,CAACM,KAAK,CAACC,WAAW,CAAC,CAAC,KAAKH,MAAM,CAACG,WAAW,CAAC,CAAC,EAAE;UACrDlB,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC;QACrB;;QAEA;QACAoB,UAAU,CAAC,MAAM;UACfX,aAAa,CAAC,CAAC;QACjB,CAAC,EAAE,IAAI,CAAC;MACV,CAAC,CAAC,OAAOK,GAAG,EAAE;QACZP,QAAQ,CAAC,uBAAuB,CAAC;MACnC;IACF;EACF,CAAC;;EAED;EACApB,SAAS,CAAC,MAAM;IACdsB,aAAa,CAAC,CAAC;EACjB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACA,MAAMY,cAAc,GAAGA,CAAA,KAAM;IAC3BhB,WAAW,CAAC,IAAI,CAAC;EACnB,CAAC;EAED,oBACEd,OAAA;IAAK+B,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBhC,OAAA;MAAI+B,SAAS,EAAC,YAAY;MAAAC,QAAA,EAAC;IAAuB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACtDzB,OAAO,gBACNX,OAAA;MAAAgC,QAAA,EAAG;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,gBAEtBpC,OAAA,CAAAE,SAAA;MAAA8B,QAAA,EACG,CAACnB,QAAQ,gBACRb,OAAA;QAAK+B,SAAS,EAAC,WAAW;QAAAC,QAAA,gBACxBhC,OAAA;UAAAgC,QAAA,EAAK3B;QAAQ;UAAA4B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACnBpC,OAAA;UAAK+B,SAAS,EAAC,SAAS;UAAAC,QAAA,gBACtBhC,OAAA;YACEqC,OAAO,EAAEA,CAAA,KAAMb,YAAY,CAAC,MAAM,CAAE;YACpCc,QAAQ,EAAE/B,UAAU,KAAK,IAAK;YAC9BwB,SAAS,EAAC,eAAe;YAAAC,QAAA,EAC1B;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACTpC,OAAA;YACEqC,OAAO,EAAEA,CAAA,KAAMb,YAAY,CAAC,OAAO,CAAE;YACrCc,QAAQ,EAAE/B,UAAU,KAAK,IAAK;YAC9BwB,SAAS,EAAC,eAAe;YAAAC,QAAA,EAC1B;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC,gBAENpC,OAAA;QAAK+B,SAAS,EAAC,WAAW;QAAAC,QAAA,gBACxBhC,OAAA;UAAAgC,QAAA,EAAI;QAAU;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACnBpC,OAAA;UAAAgC,QAAA,GAAG,cAAY,EAACvB,KAAK;QAAA;UAAAwB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC1BpC,OAAA;UAAQqC,OAAO,EAAEA,CAAA,KAAMpB,QAAQ,CAAC,GAAG,CAAE;UAACc,SAAS,EAAC,gBAAgB;UAAAC,QAAA,EAAC;QAEjE;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACN;IACN,gBACD,CACH,EAEArB,KAAK,iBAAIf,OAAA;MAAG+B,SAAS,EAAC,OAAO;MAAAC,QAAA,EAAEjB;IAAK;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAE1CpC,OAAA;MAAQ+B,SAAS,EAAC,QAAQ;MAAAC,QAAA,eACxBhC,OAAA;QAAAgC,QAAA,GAAG,YAAY,eAAAhC,OAAA;UAAM+B,SAAS,EAAC,WAAW;UAAAC,QAAA,EAAC;QAAY;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC5D,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAAChC,EAAA,CAxGID,QAAQ;EAAA,QAOKN,WAAW;AAAA;AAAA0C,EAAA,GAPxBpC,QAAQ;AA0Gd,eAAeA,QAAQ;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}